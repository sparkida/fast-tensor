"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[513],{1691:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"classes/Tensor","title":"Tensor","description":"cols","source":"@site/docs/classes/Tensor.md","sourceDirName":"classes","slug":"/classes/Tensor","permalink":"/fast-tensor/classes/Tensor","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","next":{"title":"Kalman","permalink":"/fast-tensor/classes/Kalman"}}');var a=n(4848),l=n(8453);const t={},c="Tensor",d={},i=[{value:"cols",id:"cols",level:3},{value:"constructor",id:"constructor",level:3},{value:"ready",id:"ready",level:3},{value:"rows",id:"rows",level:3},{value:"setWasmPath",id:"setwasmpath",level:3},{value:"shape",id:"shape",level:3},{value:"Accessing Data",id:"accessing-data",level:2},{value:"array",id:"array",level:3},{value:"buffer",id:"buffer",level:3},{value:"data",id:"data",level:3},{value:"Arithmetic",id:"arithmetic",level:2},{value:"add",id:"add",level:3},{value:"div",id:"div",level:3},{value:"divNoNan",id:"divnonan",level:3},{value:"maximum",id:"maximum",level:3},{value:"minimum",id:"minimum",level:3},{value:"mod",id:"mod",level:3},{value:"mul",id:"mul",level:3},{value:"pow",id:"pow",level:3},{value:"squaredDifference",id:"squareddifference",level:3},{value:"sub",id:"sub",level:3},{value:"Basic Math",id:"basic-math",level:2},{value:"abs",id:"abs",level:3},{value:"acos",id:"acos",level:3},{value:"acosh",id:"acosh",level:3},{value:"asin",id:"asin",level:3},{value:"asinh",id:"asinh",level:3},{value:"atan",id:"atan",level:3},{value:"atan2",id:"atan2",level:3},{value:"atanh",id:"atanh",level:3},{value:"ceil",id:"ceil",level:3},{value:"clipByValue",id:"clipbyvalue",level:3},{value:"cos",id:"cos",level:3},{value:"cosh",id:"cosh",level:3},{value:"floor",id:"floor",level:3},{value:"mean",id:"mean",level:3},{value:"square",id:"square",level:3},{value:"Creation",id:"creation",level:2},{value:"clone",id:"clone",level:3},{value:"diag",id:"diag",level:3},{value:"eye",id:"eye",level:3},{value:"ones",id:"ones",level:3},{value:"zeros",id:"zeros",level:3},{value:"Matrices",id:"matrices",level:2},{value:"matMul",id:"matmul",level:3},{value:"norm",id:"norm",level:3},{value:"transpose",id:"transpose",level:3},{value:"Performance / Memory",id:"performance--memory",level:2},{value:"beginScope",id:"beginscope",level:3},{value:"delete",id:"delete",level:3},{value:"endScope",id:"endscope",level:3},{value:"memory",id:"memory",level:3},{value:"scope",id:"scope",level:3},{value:"Slicing And Joining",id:"slicing-and-joining",level:2},{value:"reverse",id:"reverse",level:3},{value:"stack",id:"stack",level:3},{value:"Transformations",id:"transformations",level:2},{value:"flatten",id:"flatten",level:3},{value:"pad",id:"pad",level:3},{value:"reshape",id:"reshape",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"tensor",children:"Tensor"})}),"\n",(0,a.jsx)(s.h3,{id:"cols",children:"cols"}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L227",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"constructor",children:"constructor"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["Tensor(data: typeof NULL | Data, shape: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/Shape",children:"Shape"}),", ptr: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/OptionalNumber",children:"OptionalNumber"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L46",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"ready",children:"ready"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"ready()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Promise<void>"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Interface.ts#L25",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"rows",children:"rows"}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L216",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"setwasmpath",children:"setWasmPath"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"setWasmPath(path: string)"})," \u2192 ",(0,a.jsx)(s.code,{children:"Promise<void>"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Interface.ts#L14",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"shape",children:"shape"}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L202",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"accessing-data",children:"Accessing Data"}),"\n",(0,a.jsx)(s.h3,{id:"array",children:"array"}),"\n",(0,a.jsx)(s.p,{children:"Retrieve a copy of the data into a new Array with same shape."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"array()"})," \u2192 ",(0,a.jsx)(s.code,{children:"number | Array1d | Array2d"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const mat = tf.tensor([ [ 1, 2 ], [ 3, 4 ] ]);\nconst arr = mat.array();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L876",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"buffer",children:"buffer"}),"\n",(0,a.jsx)(s.p,{children:"Access the raw typed array from wasm memory, useful for in-place operations."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"buffer()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Float32Array"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const mat = tf.tensor([1, 2, 3, 4]);\nconst buf = mat.buffer();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L837",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"data",children:"data"}),"\n",(0,a.jsx)(s.p,{children:"Retrieve a copy of the data into a new buffer."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"data()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Float32Array<ArrayBuffer>"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const mat = tf.tensor([1, 2, 3, 4]);\nconst data = mat.data();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L857",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"arithmetic",children:"Arithmetic"}),"\n",(0,a.jsx)(s.h3,{id:"add",children:"add"}),"\n",(0,a.jsx)(s.p,{children:"Add a tensor or scalar, a + b. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["add(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).add(2);\n// tensor\nft.tensor([1, 2, 3, 4]).add(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L362",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"div",children:"div"}),"\n",(0,a.jsx)(s.p,{children:"Divides a tensor or scalar element-wise, a / b. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["div(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),", noNan: boolean)"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).div(2);\n// tensor\nft.tensor([1, 2, 3, 4]).div(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L413",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"divnonan",children:"divNoNan"}),"\n",(0,a.jsx)(s.p,{children:"Divide a tensor or scalar element-wise, a / b. Return 0 (instead of NaN) if denominator is 0. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["divNoNan(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).divNoNan(2);\n// tensor\nft.tensor([1, 2, 3, 4]).divNoNan(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L430",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"maximum",children:"maximum"}),"\n",(0,a.jsx)(s.p,{children:"Max of a and b (a > b ? a : b) element-wise. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["maximum(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).maximum(2);\n// tensor\nft.tensor([1, 3, 4, 5]).maximum(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L444",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"minimum",children:"minimum"}),"\n",(0,a.jsx)(s.p,{children:"Min of a and b (a < b ? a : b) element-wise. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["minimum(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).minimum(2);\n// tensor\nft.tensor([0, 1, 2, 3]).minimum(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L461",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"mod",children:"mod"}),"\n",(0,a.jsx)(s.p,{children:"Modulo of a and b element-wise, a % b. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["mod(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).mod(2);\n// tensor\nft.tensor([2, 4, 6, 8]).mod(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L478",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"mul",children:"mul"}),"\n",(0,a.jsx)(s.p,{children:"Multiply a tensor or scalar element-wise, a * b. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["mul(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).mul(2);\n// tensor\nft.tensor([1, 2, 3, 4]).mul(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L396",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"pow",children:"pow"}),"\n",(0,a.jsx)(s.p,{children:"Power of a and b element-wise, a^b. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["pow(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).pow(2);\n// tensor\nft.tensor([0, 1, 2, 3]).pow(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L495",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"squareddifference",children:"squaredDifference"}),"\n",(0,a.jsx)(s.p,{children:"Squared difference of a and b element-wise, (a - b) * (a - b). Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["squaredDifference(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).squaredDifference(2);\n// tensor\nft.tensor([0, 1, 2, 3]).squaredDifference(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L512",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"sub",children:"sub"}),"\n",(0,a.jsx)(s.p,{children:"Subtract a tensor or scalar element-wise, a - b. Supports broadcasting."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["sub(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"// scalar\nconst mat = ft.tensor([1, 2, 3, 4]).sub(2);\n// tensor\nft.tensor([1, 2, 3, 4]).sub(mat);\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L379",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"basic-math",children:"Basic Math"}),"\n",(0,a.jsx)(s.h3,{id:"abs",children:"abs"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"abs()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L520",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"acos",children:"acos"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"acos()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L526",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"acosh",children:"acosh"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"acosh()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L532",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"asin",children:"asin"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"asin()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L538",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"asinh",children:"asinh"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"asinh()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L544",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"atan",children:"atan"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"atan()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L550",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"atan2",children:"atan2"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["atan2(input: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/InputData",children:"InputData"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L556",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"atanh",children:"atanh"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"atanh()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L564",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"ceil",children:"ceil"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"ceil()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L570",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"clipbyvalue",children:"clipByValue"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"clipByValue(lower: number, upper: number)"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L576",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"cos",children:"cos"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"cos()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L585",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"cosh",children:"cosh"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"cosh()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L591",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"floor",children:"floor"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"floor()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L597",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"mean",children:"mean"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["mean(axis: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/OptionalNumber",children:"OptionalNumber"}),", keepdims: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/OptionalBool",children:"OptionalBool"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L609",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"square",children:"square"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"square()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L603",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"creation",children:"Creation"}),"\n",(0,a.jsx)(s.h3,{id:"clone",children:"clone"}),"\n",(0,a.jsx)(s.p,{children:"Deep copy the current tensor."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"clone()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const mat = ft.tensor([1, 2]);\nconst clone = mat.clone();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L319",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"diag",children:"diag"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"diag()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const mat = ft.tensor([ [ 1, 2 ], [ 3, 4 ] ]);\nconst diag = mat.diag();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L708",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"eye",children:"eye"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"eye()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const eye = ft.eye([2, 2]);\n// also can be used on an instance\nconst mat = ft.tensor([ [ 1, 2 ], [ 3, 4 ] ]);\nconst matEye = mat.eye();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L786",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"ones",children:"ones"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"ones()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const ones = ft.ones([2, 2]);\n// also can be used on an instance\nconst mat = ft.tensor([1, 2, 3, 4]);\nconst matOnes = mat.ones();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L757",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"zeros",children:"zeros"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"zeros()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"const zeros = ft.zeros([2, 2]);\n// also can be used on an instance\nconst mat = ft.tensor([1, 2, 3, 4]);\nconst matZeros = mat.zeros();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L735",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"matrices",children:"Matrices"}),"\n",(0,a.jsx)(s.h3,{id:"matmul",children:"matMul"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["matMul(tensor: ",(0,a.jsx)(s.a,{href:"/fast-tensor/classes/Tensor",children:"Tensor"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L650",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"norm",children:"norm"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:['norm(ord: undefined | null | "L2" | "L1" | "max", axis: ',(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/OptionalNumber",children:"OptionalNumber"}),", keepdims: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/OptionalBool",children:"OptionalBool"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L626",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"transpose",children:"transpose"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"transpose()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L677",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"performance--memory",children:"Performance / Memory"}),"\n",(0,a.jsx)(s.h3,{id:"beginscope",children:"beginScope"}),"\n",(0,a.jsx)(s.p,{children:"Start a scope to track any instances created. Should be used with ."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"beginScope()"})," \u2192 ",(0,a.jsx)(s.code,{children:"void"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"ft.beginScope();\nconst a = tf.ones([2,2]);\nconst b = a.add(2);\nconst result = b.data();\nft.endScope();\n// a and b will have been freed from memory\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L175",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"delete",children:"delete"}),"\n",(0,a.jsx)(s.p,{children:"Delete the instance from WASM backend to avoid OOM."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"delete()"})," \u2192 ",(0,a.jsx)(s.code,{children:"void"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'const mat = tf.ones([2, 2]);\n// do some things ...\nconst result = mat.data();\nmat.delete();\n// accessing "mat" beyond this point is unsafe\n'})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L151",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"endscope",children:"endScope"}),"\n",(0,a.jsx)(s.p,{children:"End a scope of tracked instances. Should be used with ."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"endScope()"})," \u2192 ",(0,a.jsx)(s.code,{children:"void"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"ft.beginScope();\nconst a = tf.ones([2,2]);\nconst b = a.add(2);\nconst result = b.data();\nft.endScope();\n// a and b will have been freed from memory\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L191",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"memory",children:"memory"}),"\n",(0,a.jsx)(s.p,{children:"Returns the count of active pointers, useful for debugging memory management."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"memory()"})," \u2192 ",(0,a.jsx)(s.code,{children:"{ pointers: number }"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:"ft.memory();\n"})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L137",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"scope",children:"scope"}),"\n",(0,a.jsx)(s.p,{children:"Start a scope to track any instances created, will automatically\nclear out any references not returned."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"scope(callback: () => unknown)"})," \u2192 ",(0,a.jsx)(s.code,{children:"unknown"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'ft.scope(() => {\n const a = tf.ones([2,2]);\n const b = a.add(2);\n const result = b.data();\n return result;\n});\n// "a" and "b" will have been freed from memory\n'})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ts",children:'const result = ft.scope(() => {\n const a = tf.ones([2,2]);\n const b = a.add(2);\n return b;\n});\n// only "a" will have been freed from memory\n// you will need to manually delete the instance\nresult.delete();\n'})}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L260",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"slicing-and-joining",children:"Slicing And Joining"}),"\n",(0,a.jsx)(s.h3,{id:"reverse",children:"reverse"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsxs)("code",{children:["reverse(axis: ",(0,a.jsx)(s.a,{href:"/fast-tensor/type-aliases/OptionalNumber",children:"OptionalNumber"}),")"]})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L664",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"stack",children:"stack"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"stack(matrices: Tensor[])"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L689",children:"source"})}),"\n",(0,a.jsx)(s.h2,{id:"transformations",children:"Transformations"}),"\n",(0,a.jsx)(s.h3,{id:"flatten",children:"flatten"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"flatten()"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L346",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"pad",children:"pad"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"pad(paddings: Array1d | Array2d, constant: number)"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L797",children:"source"})}),"\n",(0,a.jsx)(s.h3,{id:"reshape",children:"reshape"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)("code",{children:"reshape(shapeOrRows: number | Shape, cols: number)"})," \u2192 ",(0,a.jsx)(s.code,{children:"Tensor"})]}),"\n",(0,a.jsx)("small",{children:(0,a.jsx)(s.a,{href:"https://github.com/sparkida/fast-tensor/blob/f067005b8ef13537745b359475af6f1d1b8209a1/src/ts/Tensor.ts#L328",children:"source"})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var r=n(6540);const a={},l=r.createContext(a);function t(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);